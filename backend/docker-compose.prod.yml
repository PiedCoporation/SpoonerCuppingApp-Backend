# Production Environment Override
# This file extends the base docker-compose.yml for production
services:
  coffee-cupping-postgres:
    container_name: coffee-cupping-postgres-prod
    environment:
      POSTGRES_DB: ${POSTGRES_DBNAME}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres-prod-data:/var/lib/postgresql/data
    restart: always
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G
        reservations:
          cpus: "0.5"
          memory: 512M

  coffee-cupping-api:
    container_name: coffee-cupping-api-prod
    environment:
      POSTGRES_DBNAME: ${POSTGRES_DBNAME}
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB_URL: ${POSTGRES_DB_URL}
      HTTP_PORT: ${HTTP_PORT}
      JWT_ACCESS_TOKEN_KEY: ${JWT_ACCESS_TOKEN_KEY}
      JWT_ACCESS_TOKEN_EXPIRES_IN: ${JWT_ACCESS_TOKEN_EXPIRES_IN}
      JWT_REFRESH_TOKEN_KEY: ${JWT_REFRESH_TOKEN_KEY}
      JWT_REFRESH_TOKEN_EXPIRES_IN: ${JWT_REFRESH_TOKEN_EXPIRES_IN}
      JWT_REGISTER_TOKEN_KEY: ${JWT_REGISTER_TOKEN_KEY}
      JWT_REGISTER_TOKEN_EXPIRES_IN: ${JWT_REGISTER_TOKEN_EXPIRES_IN}
      JWT_LOGIN_TOKEN_KEY: ${JWT_LOGIN_TOKEN_KEY}
      JWT_LOGIN_TOKEN_EXPIRES_IN: ${JWT_LOGIN_TOKEN_EXPIRES_IN}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_APP_PASSWORD: ${SMTP_APP_PASSWORD}
      LOGGER_LOG_LEVEL: ${LOGGER_LOG_LEVEL}
    ports:
      - "${HTTP_PORT}:8080"
    restart: always
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G
        reservations:
          cpus: "0.5"
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres-prod-data:
    name: postgres-prod-data
    driver: local
